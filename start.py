#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ FTP Bridge —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
"""

import socket
import subprocess
import sys
import os
from pathlib import Path

def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    if sys.version_info < (3, 8):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        print(f"   –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {sys.version}")
        return False
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}")
    return True

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    required_packages = [
        'fastapi', 'uvicorn', 'pydantic', 'pydantic-settings', 
        'slowapi', 'python-multipart'
    ]
    
    missing = []
    for package in required_packages:
        try:
            __import__(package.replace('-', '_'))
        except ImportError:
            missing.append(package)
    
    if missing:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–∞–∫–µ—Ç—ã: {', '.join(missing)}")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install -r requirements.txt")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    try:
        import paramiko
        print("‚úÖ SFTP –ø–æ–¥–¥–µ—Ä–∂–∫–∞ (paramiko) –¥–æ—Å—Ç—É–ø–Ω–∞")
    except ImportError:
        print("‚ö†Ô∏è  SFTP –ø–æ–¥–¥–µ—Ä–∂–∫–∞ (paramiko) –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
    
    print("‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    return True

def check_port_availability(host, port):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞"""
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.settimeout(1)
            result = s.connect_ex((host, port))
            return result != 0
    except Exception:
        return False

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π degraded mode"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    try:
        from config import settings
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
        degraded_mode = False
    except ValueError as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        print("\nüî∂ –í–ö–õ–Æ–ß–ï–ù–ò–ï DEGRADED MODE:")
        print("   –°–µ—Ä–≤–∏—Å –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
        print("   - /health endpoint –¥–æ—Å—Ç—É–ø–µ–Ω")
        print("   - FTP —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã")
        print("   - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞")
        print("\nüí° –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:")
        print("   1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ env_example.txt –∫–∞–∫ .env")
        print("   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω—ã —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        print("      export FTP_BRIDGE_TOKEN_CLIENT1=$(python -c 'import secrets; print(secrets.token_hex(16))')")
        print("   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å")
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è degraded mode
        os.environ['FTP_BRIDGE_DEGRADED_MODE'] = 'true'
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–±–æ—Ç—ã FastAPI
        if 'FTP_BRIDGE_TOKEN_SYSTEM' not in os.environ:
            os.environ['FTP_BRIDGE_TOKEN_SYSTEM'] = 'degraded_mode_placeholder_token_32chars'
        
        try:
            from config import settings
            degraded_mode = True
            print("‚úÖ Degraded mode –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        except Exception as e2:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∞–∂–µ –≤ degraded mode: {e2}")
            return False, None
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False, None
    
    # –í —Ä–µ–∂–∏–º–µ –¥–µ–≥—Ä–∞–¥–∞—Ü–∏–∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–æ–∫
    if degraded_mode:
        print("üî∂ –†–µ–∂–∏–º –¥–µ–≥—Ä–∞–¥–∞—Ü–∏–∏ - –±–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏...")
        
        # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è degraded mode
        temp_dir = Path(settings.temp_dir)
        temp_dir.mkdir(parents=True, exist_ok=True)
        
        host = settings.host if settings.host != "0.0.0.0" else "127.0.0.1"
        if not check_port_availability(host, settings.port):
            print(f"‚ùå –ü–æ—Ä—Ç {settings.port} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è")
            return False, degraded_mode
        
        print(f"‚úÖ –ë–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è degraded mode –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        print(f"   –•–æ—Å—Ç: {settings.host}:{settings.port}")
        print(f"   –°—Ç–∞—Ç—É—Å: DEGRADED (FTP —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã)")
        
        return True, degraded_mode
    
    # –ü–æ–ª–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
    token_count = len(settings.client_tokens)
    if token_count == 0:
        print("‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —Ç–æ–∫–µ–Ω—ã –¥–æ—Å—Ç—É–ø–∞!")
        return False, False
    elif token_count < 2:
        print(f"‚ö†Ô∏è  –ù–∞—Å—Ç—Ä–æ–µ–Ω —Ç–æ–ª—å–∫–æ {token_count} —Ç–æ–∫–µ–Ω. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ–ª—å—à–µ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.")
    else:
        print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: {token_count}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–æ–∫–µ–Ω–æ–≤
    weak_tokens = [token for token in settings.client_tokens.keys() if len(token) < 32]
    if weak_tokens:
        print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –∫–æ—Ä–æ—Ç–∫–∏–µ —Ç–æ–∫–µ–Ω—ã ({len(weak_tokens)} —à—Ç.). –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω—ã 32+ —Å–∏–º–≤–æ–ª–æ–≤.")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    security_issues = []
    
    if not settings.debug and "*" in settings.cors_origins:
        security_issues.append("CORS —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –ª—é–±—ã–µ –¥–æ–º–µ–Ω—ã –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ")
    
    if not settings.rate_limit_enabled:
        security_issues.append("Rate limiting –æ—Ç–∫–ª—é—á–µ–Ω")
    
    if settings.default_protocol.value == "ftp":
        security_issues.append("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–µ–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π FTP –ø—Ä–æ—Ç–æ–∫–æ–ª")
    
    if security_issues:
        print("‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:")
        for issue in security_issues:
            print(f"   - {issue}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–æ–≤
    temp_dir = Path(settings.temp_dir)
    if not temp_dir.exists():
        print(f"üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞: {temp_dir}")
        temp_dir.mkdir(parents=True, exist_ok=True)
    
    if not temp_dir.is_dir() or not os.access(temp_dir, os.W_OK):
        print(f"‚ùå –í—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏: {temp_dir}")
        return False, False
    
    print(f"‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥: {temp_dir}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞
    host = settings.host if settings.host != "0.0.0.0" else "127.0.0.1"
    if not check_port_availability(host, settings.port):
        print(f"‚ùå –ü–æ—Ä—Ç {settings.port} —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è")
        print(f"   –ò–∑–º–µ–Ω–∏—Ç–µ FTP_BRIDGE_PORT –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–∏—Å")
        return False, False
    
    print(f"‚úÖ –ü–æ—Ä—Ç {settings.port} –¥–æ—Å—Ç—É–ø–µ–Ω")
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print(f"\nüìä –ò—Ç–æ–≥–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"   –•–æ—Å—Ç: {settings.host}:{settings.port}")
    print(f"   –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏: {settings.debug}")
    print(f"   –ü—Ä–æ—Ç–æ–∫–æ–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {settings.default_protocol.value}")
    print(f"   FTPS: {settings.use_ftps}")
    print(f"   Rate limiting: {settings.rate_limit_enabled}")
    if settings.rate_limit_enabled:
        print(f"   –õ–∏–º–∏—Ç: {settings.rate_limit_requests} –∑–∞–ø—Ä–æ—Å–æ–≤/{settings.rate_limit_window}—Å")
    print(f"   CORS –¥–æ–º–µ–Ω—ã: {settings.cors_origins}")
    print(f"   –ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {settings.max_file_size // (1024*1024)} MB")
    print(f"   –†–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤: {settings.log_rotation_enabled}")
    if settings.known_hosts_path:
        print(f"   SFTP host keys: {settings.known_hosts_path}")
    
    return True, False

def interactive_setup():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ"""
    print("\nüîß –ü–ï–†–í–û–ù–ê–ß–ê–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è .env
    env_file = Path(".env")
    if env_file.exists():
        print("‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω")
        return True
    
    print("üìù –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑ —à–∞–±–ª–æ–Ω–∞...")
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑ —à–∞–±–ª–æ–Ω–∞
    example_file = Path("env_example.txt")
    if not example_file.exists():
        print("‚ùå –§–∞–π–ª env_example.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–æ–≤
    print("\nüîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...")
    
    try:
        import secrets
        tokens = {
            "POWERBI": secrets.token_hex(16),
            "EXCEL": secrets.token_hex(16),
            "ANALYTICS": secrets.token_hex(16)
        }
        
        # –ß—Ç–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
        with open(example_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # –ó–∞–º–µ–Ω–∞ –ø—Ä–∏–º–µ—Ä–æ–≤ —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ
        content = content.replace(
            "FTP_BRIDGE_TOKEN_POWERBI=aabbccdd11223344556677889900aabbccddee",
            f"FTP_BRIDGE_TOKEN_POWERBI={tokens['POWERBI']}"
        )
        content = content.replace(
            "FTP_BRIDGE_TOKEN_EXCEL=1122334455667788990011223344556677889900",
            f"FTP_BRIDGE_TOKEN_EXCEL={tokens['EXCEL']}"
        )
        content = content.replace(
            "FTP_BRIDGE_TOKEN_ANALYTICS=9988776655443322110099887766554433221100",
            f"FTP_BRIDGE_TOKEN_ANALYTICS={tokens['ANALYTICS']}"
        )
        
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ .env —Ñ–∞–π–ª–∞
        with open(env_file, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print("‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω —Å –Ω–æ–≤—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏:")
        print(f"   Power BI —Ç–æ–∫–µ–Ω: {tokens['POWERBI']}")
        print(f"   Excel —Ç–æ–∫–µ–Ω: {tokens['EXCEL']}")
        print(f"   Analytics —Ç–æ–∫–µ–Ω: {tokens['ANALYTICS']}")
        print("\nüíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ —Ç–æ–∫–µ–Ω—ã –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ!")
        print("üîí –ù–µ –¥–µ–ª–∏—Ç–µ—Å—å —Ç–æ–∫–µ–Ω–∞–º–∏ –∏ –Ω–µ –¥–æ–±–∞–≤–ª—è–π—Ç–µ .env –≤ Git!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞: {e}")
        return False

def run_server():
    """–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        from config import settings
        
        print(f"\nüöÄ –ó–∞–ø—É—Å–∫ FTP Bridge —Å–µ—Ä–≤–µ—Ä–∞...")
        print(f"   URL: http://{settings.host}:{settings.port}")
        print(f"   –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://127.0.0.1:{settings.port}/docs")
        print(f"   Health check: http://127.0.0.1:{settings.port}/health")
        print("\nüí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        print("=" * 50)
        
        # –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ uvicorn
        import uvicorn
        uvicorn.run(
            "main:app",
            host=settings.host,
            port=settings.port,
            reload=settings.debug,
            log_level=settings.log_level.value.lower(),
            access_log=True
        )
        
    except KeyboardInterrupt:
        print("\n\nüëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        return False
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    print("=" * 60)
    print("üåâ FTP Bridge v2.1.0 - –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—Å–∫–∞")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã
    if not check_python_version():
        sys.exit(1)
    
    if not check_dependencies():
        sys.exit(1)
    
    # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    if not Path(".env").exists():
        if not interactive_setup():
            sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π degraded mode
    config_ok, degraded_mode = check_environment()
    if not config_ok:
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–æ—Ä—Ç —Å–≤–æ–±–æ–¥–µ–Ω")  
        print("   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        sys.exit(1)
    
    if degraded_mode:
        print("\nüî∂ –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –¥–µ–≥—Ä–∞–¥–∞—Ü–∏–∏:")
        print("   - –î–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ /health –∏ /docs —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã")
        print("   - FTP —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã")
        print("   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–æ–∫–µ–Ω—ã –¥–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
    else:
        print("\nüéØ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    if not run_server():
        sys.exit(1)

if __name__ == "__main__":
    main() 